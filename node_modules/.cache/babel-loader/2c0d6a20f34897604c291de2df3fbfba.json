{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressDisplay.js\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function ProgressDisplay({\n  session\n}) {\n  if (!session) return;\n  const pauseToggle = !isTimerRunning === false || session === null ? \"none\" : \"block\";\n  const focusBreakToggle = (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? `${minutesToDuration(focusDuration)} minutes` : `${minutesToDuration(breakDuration)} minutes`;\n  const time = (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration : breakDuration;\n  const bar = (1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / (time * 60)) * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", focusBreakToggle), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      display: `${pauseToggle}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": bar // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${bar}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/geoff/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressDisplay.js"],"names":["minutesToDuration","secondsToDuration","ProgressDisplay","session","pauseToggle","isTimerRunning","focusBreakToggle","label","focusDuration","breakDuration","time","bar","timeRemaining","display","height","width"],"mappings":";AAAA,SAAQA,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAqC;AAChD,MAAG,CAACA,OAAJ,EAAa;AAEb,QAAMC,WAAW,GAAI,CAACC,cAAD,KAAoB,KAApB,IAA6BF,OAAO,KAAK,IAA1C,GAAkD,MAAlD,GAA2D,OAA/E;AACA,QAAMG,gBAAgB,GAAI,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAApB,GACpB,GAAEP,iBAAiB,CAACQ,aAAD,CAAgB,UADf,GAEpB,GAAER,iBAAiB,CAACS,aAAD,CAAgB,UAFxC;AAGA,QAAMC,IAAI,GAAI,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAApB,GAAkCC,aAAlC,GAAkDC,aAA/D;AACA,QAAME,GAAG,GAAG,CAAC,IAAK,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,aAAT,KAA0BF,IAAI,GAAG,EAAjC,CAAN,IAA+C,GAA3D;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,OADD,aACCA,OADD,uBACCA,OAAO,CAAEI,KADV,WACsBD,gBADtB,CAFJ,eAMI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAES,aAAV,CADlB,eANJ,eASI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAG,GAAET,WAAY;AAAzB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADA,CAFJ,eAeI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAeH,GALnB,CAKwB;AALxB;AAMI,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAG,GAAEJ,GAAI;AAAf,KANX,CAM+B;AAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADA,CAfJ,CADJ;AAgCH","sourcesContent":["import {minutesToDuration, secondsToDuration} from \"../utils/duration\";\r\n\r\nexport default function ProgressDisplay({ session }){\r\n    if(!session) return;\r\n\r\n    const pauseToggle = (!isTimerRunning === false || session === null) ? \"none\" : \"block\";\r\n    const focusBreakToggle = (session?.label === \"Focusing\") ?\r\n        `${minutesToDuration(focusDuration)} minutes` :\r\n        `${minutesToDuration(breakDuration)} minutes`;\r\n    const time = (session?.label === \"Focusing\") ? focusDuration : breakDuration\r\n    const bar = (1 - (session?.timeRemaining / (time * 60))) * 100\r\n\r\n    return (\r\n        <div>\r\n            {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n            <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n                <h2 data-testid=\"session-title\">\r\n                {session?.label} for {focusBreakToggle}\r\n                </h2>\r\n                {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(session?.timeRemaining)} remaining\r\n                </p>\r\n                <h3 style={{display: `${pauseToggle}`}}>PAUSED</h3>\r\n            </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\"}}>\r\n                <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow={bar} // TODO: Increase aria-valuenow as elapsed time increases\r\n                    style={{width: `${bar}%`}} // TODO: Increase width % as elapsed time increases\r\n                />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    "]},"metadata":{},"sourceType":"module"}