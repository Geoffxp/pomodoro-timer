{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n\nconst [bar, setBar] = useState(0);\nuseInterval(() => {\n  var _session;\n\n  if (((_session = session) === null || _session === void 0 ? void 0 : _session.label) === \"Focusing\") {\n    const oneTick = 100 / (focusDuration * 60);\n\n    if (bar < 100) {\n      setBar(amount => {\n        amount = bar + oneTick;\n        return amount;\n      });\n    }\n  } else {\n    const oneTick = 100 / (breakDuration * 60);\n    setBar(amount => {\n      amount = bar - oneTick;\n      return amount;\n    });\n  }\n}, isTimerRunning ? 1000 : null);\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      setBar(0);\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    setBar(0);\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  let [focusDuration, setFocusDuration] = useState(.25);\n\n  const incrementFocusDuration = () => setFocusDuration(time => {\n    if (focusDuration < 60) {\n      time = focusDuration + 5;\n    }\n\n    return time;\n  });\n\n  const decrementFocusDuration = () => setFocusDuration(time => {\n    if (focusDuration > 5) {\n      time = focusDuration - 5;\n    }\n\n    return time;\n  });\n\n  let [breakDuration, setBreakDuration] = useState(.25);\n\n  const incrementBreakDuration = () => setBreakDuration(time => {\n    if (breakDuration < 60) {\n      time = breakDuration + 1;\n    }\n\n    return time;\n  });\n\n  const decrementBreakDuration = () => setBreakDuration(time => {\n    if (breakDuration > 1) {\n      time = breakDuration - 1;\n    }\n\n    return time;\n  });\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  const [disabled, setDisabled] = useState(true);\n\n  function playPause() {\n    setDisabled(false);\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stop() {\n    setBar(0);\n    setIsTimerRunning(false);\n    setSession(null);\n    setDisabled(true);\n  }\n\n  const displayToggle = session ? \"block\" : \"none\";\n\n  const focusBreakToggle = () => (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? `${minutesToDuration(focusDuration)} minutes` : `${minutesToDuration(breakDuration)} minutes`;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: decrementFocusDuration,\n    disabled: !disabled,\n    \"data-testid\": \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: incrementFocusDuration,\n    disabled: !disabled,\n    \"data-testid\": \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: decrementBreakDuration,\n    disabled: !disabled,\n    \"data-testid\": \"decrease-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: incrementBreakDuration,\n    disabled: !disabled,\n    \"data-testid\": \"increase-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    disabled: disabled,\n    onClick: stop,\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    style: {\n      display: `${displayToggle}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", focusBreakToggle()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    style: {\n      display: `${displayToggle}`\n    },\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": bar // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${bar}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/geoff/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","nextTick","prevState","timeRemaining","Math","max","bar","setBar","session","label","oneTick","focusDuration","amount","breakDuration","isTimerRunning","nextSession","currentSession","Pomodoro","setIsTimerRunning","setSession","setFocusDuration","incrementFocusDuration","time","decrementFocusDuration","setBreakDuration","incrementBreakDuration","decrementBreakDuration","Audio","play","disabled","setDisabled","playPause","nextState","prevStateSession","stop","displayToggle","focusBreakToggle","oi","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\nconst [bar, setBar] = useState(0)\n  useInterval(() => {\n    if(session?.label === \"Focusing\"){\n      const oneTick = 100 / (focusDuration * 60)\n      if(bar < 100){\n        setBar((amount) => {\n          amount = bar + oneTick\n          return amount\n        })\n      }\n    }\n    else{\n      const oneTick = 100 / (breakDuration * 60)\n      setBar((amount) => {\n        amount = bar - oneTick\n        return amount\n      })\n    }\n    \n  }, isTimerRunning ? 1000 : null)\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      setBar(0)\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    setBar(0)\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  let [focusDuration, setFocusDuration] = useState(.25);\n  const incrementFocusDuration = () => setFocusDuration((time) => {\n    if(focusDuration < 60){\n      time = focusDuration + 5;\n    }\n    return time\n  })\n  const decrementFocusDuration = () => setFocusDuration((time) => {\n    if(focusDuration > 5){\n      time = focusDuration - 5;\n    }\n    return time\n  })\n\n  let [breakDuration, setBreakDuration] = useState(.25);\n  const incrementBreakDuration = () => setBreakDuration((time) => {\n    if(breakDuration < 60){\n      time = breakDuration + 1;\n    }\n    return time\n  })\n  const decrementBreakDuration = () => setBreakDuration((time) => {\n    if(breakDuration > 1){\n      time = breakDuration - 1;\n    }\n    return time\n  })\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  const [disabled, setDisabled] = useState(true);\n  function playPause() {\n    setDisabled(false)\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n\n  function stop() {\n    setBar(0)\n    setIsTimerRunning(false)\n    setSession(null)\n    setDisabled(true)\n  }\n\n  const displayToggle = (session) ? \"block\" : \"none\";\n  const focusBreakToggle = () => (session?.label === \"Focusing\") ?\n    `${minutesToDuration(focusDuration)} minutes` :\n    `${minutesToDuration(breakDuration)} minutes`;\n\n \n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={decrementFocusDuration}\n                disabled={!disabled}\n                data-testid=\"decrease-focus\"\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={incrementFocusDuration}\n                disabled={!disabled}\n                data-testid=\"increase-focus\"\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={decrementBreakDuration}\n                  disabled={!disabled}\n                  data-testid=\"decrease-break\"\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={incrementBreakDuration}\n                  disabled={!disabled}\n                  data-testid=\"increase-break\"\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              disabled={disabled}\n              onClick={stop}\n              title=\"Stop the session\"\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\" style={{display: `${displayToggle}`}}>\n              {session?.label} for {focusBreakToggle()}\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" style={{display: `${displayToggle}`}} data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={bar} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{width: `${bar}%`}} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}