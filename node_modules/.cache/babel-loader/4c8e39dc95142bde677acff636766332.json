{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressDisplay.js\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport React from \"react\";\nexport default function ProgressDisplay({\n  session,\n  isTimerRunning,\n  focusDuration,\n  breakDuration\n}) {\n  if (!session) return null; // does not display when session is not active\n  // displays pause text when paused\n\n  const pauseToggle = !isTimerRunning === false || session === null ? \"none\" : \"block\"; // switches caption depending on session state\n\n  const focusBreakToggle = (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? `${minutesToDuration(focusDuration)} minutes` : `${minutesToDuration(breakDuration)} minutes`; // math to handle progress bar filling\n\n  const time = (session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration : breakDuration;\n  const bar = (1 - (session === null || session === void 0 ? void 0 : session.timeRemaining) / (time * 60)) * 100;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", focusBreakToggle), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      display: `${pauseToggle}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": bar,\n    style: {\n      width: `${bar}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/geoff/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressDisplay.js"],"names":["minutesToDuration","secondsToDuration","React","ProgressDisplay","session","isTimerRunning","focusDuration","breakDuration","pauseToggle","focusBreakToggle","label","time","bar","timeRemaining","display","height","width"],"mappings":";AAAA,SAAQA,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,aAA3B;AAA0CC,EAAAA;AAA1C,CAAzB,EAAmF;AAC9F,MAAG,CAACH,OAAJ,EAAa,OAAO,IAAP,CADiF,CACpE;AAE1B;;AACA,QAAMI,WAAW,GAAI,CAACH,cAAD,KAAoB,KAApB,IAA6BD,OAAO,KAAK,IAA1C,GAAkD,MAAlD,GAA2D,OAA/E,CAJ8F,CAK9F;;AACA,QAAMK,gBAAgB,GAAI,CAAAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,KAAT,MAAmB,UAApB,GACpB,GAAEV,iBAAiB,CAACM,aAAD,CAAgB,UADf,GAEpB,GAAEN,iBAAiB,CAACO,aAAD,CAAgB,UAFxC,CAN8F,CAS9F;;AACA,QAAMI,IAAI,GAAI,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,KAAT,MAAmB,UAApB,GAAkCJ,aAAlC,GAAkDC,aAA/D;AACA,QAAMK,GAAG,GAAG,CAAC,IAAK,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,aAAT,KAA0BF,IAAI,GAAG,EAAjC,CAAN,IAA+C,GAA3D;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OADL,aACKA,OADL,uBACKA,OAAO,CAAEM,KADd,WAC0BD,gBAD1B,CADJ,eAII;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAES,aAAV,CADtB,eAJJ,eAOI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAG,GAAEN,WAAY;AAAzB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,qBAAc,GAHlB;AAII,qBAAc,KAJlB;AAKI,qBAAeH,GALnB;AAMI,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAG,GAAEJ,GAAI;AAAf,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAdJ,CADJ;AA+BH","sourcesContent":["import {minutesToDuration, secondsToDuration} from \"../utils/duration\";\r\nimport React from \"react\";\r\n\r\nexport default function ProgressDisplay({ session, isTimerRunning, focusDuration, breakDuration }){\r\n    if(!session) return null; // does not display when session is not active\r\n\r\n    // displays pause text when paused\r\n    const pauseToggle = (!isTimerRunning === false || session === null) ? \"none\" : \"block\";\r\n    // switches caption depending on session state\r\n    const focusBreakToggle = (session?.label === \"Focusing\") ?\r\n        `${minutesToDuration(focusDuration)} minutes` :\r\n        `${minutesToDuration(breakDuration)} minutes`;\r\n    // math to handle progress bar filling\r\n    const time = (session?.label === \"Focusing\") ? focusDuration : breakDuration\r\n    const bar = (1 - (session?.timeRemaining / (time * 60))) * 100\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                    <h2 data-testid=\"session-title\">\r\n                        {session?.label} for {focusBreakToggle}\r\n                    </h2>\r\n                    <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                        {secondsToDuration(session?.timeRemaining)} remaining\r\n                    </p>\r\n                    <h3 style={{display: `${pauseToggle}`}}>\r\n                        PAUSED\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                    <div className=\"progress\" style={{ height: \"20px\"}}>\r\n                        <div\r\n                            className=\"progress-bar\"\r\n                            role=\"progressbar\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuenow={bar}\r\n                            style={{width: `${bar}%`}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    "]},"metadata":{},"sourceType":"module"}